{"version":3,"sources":["RandomRestaurant/RandomTab.tsx","RandomRestaurant/RandomFab.tsx","RandomRestaurant/ResultCard.tsx","RandomRestaurant/CheckDialog.tsx","RandomRestaurant/CustomizeDialog.tsx","RandomRestaurant/useRandomizer.ts","RandomRestaurant/getDistance.tsx","RandomRestaurant/locationList.ts","RandomRestaurant/Random.tsx","RandomRestaurant/useGeolocation.tsx"],"names":["RandomTab","tabIndex","index","onChangeIndex","list","AppBar","position","color","Tabs","value","onChange","indicatorColor","textColor","centered","aria-label","map","item","idx","Tab","key","id","label","name","aria-controls","disabled","useStyles","makeStyles","theme","absolute","bottom","spacing","right","extendedIcon","marginRight","RandomFab","onClick","isResetButton","classes","useTheme","translation","useContext","TranslationContext","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","Zoom","in","timeout","style","transitionDelay","unmountOnExit","Tooltip","title","random","fab","pick","Fab","className","undefined","variant","reset","root","minWidth","padding","textAlign","actions","ResultCard","subtitle","onResetClick","onCheckClick","Card","CardContent","Typography","component","CardActions","Button","size","resultCard","resetButton","checkButton","nested","paddingLeft","CheckDialog","pickedList","randomList","totalWeight","onClose","open","React","useState","isCheckExpended","setCheckExpend","isLeftExpended","setLeftExpend","fullScreen","useMediaQuery","breakpoints","down","leftList","sort","a","b","weight","leftListWeightTotal","getName","isAlias","locationList","Dialog","aria-labelledby","fullWidth","maxWidth","DialogTitle","dialog","checkTitle","DialogContent","List","ListItem","button","ListItemText","primary","Collapse","disablePadding","length","secondary","toFixed","empty","DialogActions","autoFocus","returnButton","sortedList","defaultWeight","setList","handleClose","isSubmitting","evt","reason","customizeTitle","autoComplete","inputName","defaultWeightTag","TextField","required","type","target","newList","find","submitButton","cancelButton","reducer","state","action","done","randomNumber","Math","pickedItem","filter","init","originalList","condition","coords","TypeError","initialList","getWeight","reduce","acc","distance","point1","point2","radius","toRad","deg","PI","latitude","longitude","lat1","lat2","long1","long2","delta_lat","delta_long","sin","cos","c","atan2","sqrt","getDistance","result","palette","grey","gridContainer","flexGrow","margin","width","gridItem","snackbar","Random","useReducer","dispatch","setTabIndex","randomType","setRandomType","isCheckDialogOpen","setCheckDialogOpen","isCustomizeDialogOpen","setCustomizeDialogOpen","isSnackBarOpen","setSnackBarOpen","maximumAge","setCoords","isPending","setPending","useEffect","console","log","navigator","geolocation","ReferenceError","getCurrentPosition","err","enableHighAccuracy","startGeolocation","useGeolocation","isDetecting","randomTypeList","default","nearest","customize","handleResetClick","newValue","newRandomType","Grid","container","justify","alignItems","xs","sm","md","locating","defaultTitle","getTitle","alias","event","submitList","Snackbar","autoHideDuration","message","msg"],"mappings":"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","file":"static/js/6.192717ff.chunk.js","sourcesContent":["import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n// import SwipeableViews from 'react-swipeable-views';\n\nimport { Condition } from './useRandomizer'; // type only\ninterface TabListItem {\n  id: Condition;\n  name: string;\n  disabled?: boolean;\n}\ninterface RandomTabProps {\n  index: number;\n  onChangeIndex?: ((event: React.ChangeEvent<{}>, value: number) => void) | undefined;\n  list: TabListItem[];\n}\n\nexport default function RandomTab({ index: tabIndex, onChangeIndex, list }: RandomTabProps) {\n  return (\n    <AppBar position=\"static\" color=\"default\">\n      <Tabs\n        value={tabIndex}\n        onChange={onChangeIndex}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        centered\n        aria-label=\"full width tabs\"\n      >\n        {' '}\n        {/* centered variant=\"scrollable|fullWidth\" scrollButtons=\"auto|on|off\" */}\n        {list.map((item, idx) => <Tab key={item.id} label={item.name} id={`tab-${idx}`} aria-controls={`tabpanel-${idx}`} disabled={item.disabled} />)}\n      </Tabs>\n    </AppBar>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport Zoom from '@material-ui/core/Zoom';\n\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { TranslationContext } from '../translation/TranslationContext';\n\ninterface RandomFabProps {\n  onClick?: (event: React.MouseEvent) => void;\n  isResetButton?: boolean;\n  disabled?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  absolute: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function RandomFab({ onClick, isResetButton, disabled = false }: RandomFabProps) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { translation } = useContext(TranslationContext);\n\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  };\n\n  return (\n    <>\n      <Zoom\n        in={!isResetButton}\n        timeout={transitionDuration}\n        style={{\n          transitionDelay: `${!isResetButton ? transitionDuration.exit : 0}ms`,\n        }}\n        unmountOnExit\n      >\n        <Tooltip title={translation?.random?.fab?.pick} aria-label={translation?.random?.fab?.pick}>\n          <Fab\n            color=\"primary\"\n            className={classes.absolute}\n            onClick={disabled ? undefined : onClick}\n            variant=\"extended\"\n          >\n            <NotListedLocationIcon className={classes.extendedIcon} />\n            {translation?.random?.fab?.pick}\n          </Fab>\n        </Tooltip>\n      </Zoom>\n      <Zoom\n        in={isResetButton}\n        timeout={transitionDuration}\n        style={{\n          transitionDelay: `${isResetButton ? transitionDuration.exit : 0}ms`,\n        }}\n        unmountOnExit\n      >\n        <Tooltip title={translation?.random?.fab?.reset} aria-label={translation?.random?.fab?.reset}>\n          <Fab\n            color=\"secondary\"\n            className={classes.absolute}\n            onClick={disabled ? undefined : onClick}\n            variant=\"extended\"\n          >\n            <RefreshIcon className={classes.extendedIcon} />\n            {translation?.random?.fab?.reset}\n          </Fab>\n        </Tooltip>\n      </Zoom>\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { TranslationContext } from '../translation/TranslationContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    // height: 128,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    // color: theme.palette.text.secondary,\n  },\n  actions: {\n\n  },\n}));\n\ninterface ResultCardProps {\n  title: string;\n  subtitle?: string;\n  onResetClick?: (event: React.MouseEvent) => void;\n  onCheckClick?: (event: React.MouseEvent) => void;\n}\n\nexport default function ResultCard({\n  title, subtitle, onResetClick, onCheckClick,\n}: ResultCardProps) {\n  const classes = useStyles();\n  const { translation } = useContext(TranslationContext);\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {subtitle ?? <br/>}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button size=\"small\" onClick={onResetClick} color=\"secondary\">{translation?.random?.resultCard?.resetButton}</Button>\n        <Button size=\"small\" onClick={onCheckClick} color=\"secondary\">{translation?.random?.resultCard?.checkButton}</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n\nimport { StateItem } from './useRandomizer'; // type only\nimport { TranslationContext } from '../translation/TranslationContext';\ninterface CheckDialogProps {\n  pickedList: StateItem[];\n  randomList: StateItem[];\n  totalWeight: number;\n  onClose?: (event: {} | React.MouseEvent, reason?: \"backdropClick\" | \"escapeKeyDown\") => void;\n  open: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\n\nexport default function CheckDialog({\n  pickedList, randomList, totalWeight, onClose, open,\n}: CheckDialogProps) {\n  const classes = useStyles();\n  const { translation } = useContext(TranslationContext);\n\n  const [isCheckExpended, setCheckExpend] = React.useState(false);\n  const [isLeftExpended, setLeftExpend] = React.useState(true);\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const leftList = [...randomList].sort((a, b) => b.weight - a.weight);\n  const leftListWeightTotal = totalWeight; // leftList.reduce((acc, item) => acc + item.weight, 0);\n  // const pickedList = list.filter((item) => item.picked);\n\n  function getName (id: string, isAlias: boolean = false) {\n    return (translation?.random?.locationList as any)?.[id ?? '']?.[isAlias ? 'alias' : 'name'];\n  }\n\n  return (\n    <Dialog\n      onClose={onClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n      fullScreen={fullScreen}\n      fullWidth\n      maxWidth=\"sm\"\n    >\n      {' '}\n      {/* scroll=\"body\" */}\n      <DialogTitle id=\"simple-dialog-title\">{translation?.random?.dialog?.checkTitle}</DialogTitle>\n      <DialogContent>\n        <List>\n          <ListItem button onClick={() => setLeftExpend(!isLeftExpended)}>\n            <ListItemText primary={translation?.random?.dialog?.leftList} />\n            {isLeftExpended ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={isLeftExpended} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {\n                leftList.length\n                  ? leftList.map((item) => (\n                    <ListItem key={item.id} button className={classes.nested}>\n                      <ListItemText\n                        primary={`${getName(item.id)} ${getName(item.id, true) ? `(${getName(item.id, true)})` : ''}`}\n                        secondary={`${((item.weight / leftListWeightTotal) * 100).toFixed(2)}%`}\n                      />\n                    </ListItem>\n                  ))\n                  : (\n                    <ListItem button className={classes.nested}>\n                      <ListItemText secondary={translation?.random?.dialog?.empty} />\n                    </ListItem>\n                  )\n              }\n            </List>\n          </Collapse>\n          <ListItem button onClick={() => setCheckExpend(!isCheckExpended)}>\n            <ListItemText primary={translation?.random?.dialog?.pickedList} />\n            {isCheckExpended ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={isCheckExpended} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {\n                pickedList.length\n                  ? pickedList.map((item) => (\n                    <ListItem key={item.id} button className={classes.nested}>\n                      <ListItemText primary={`${getName(item.id)}`} />\n                    </ListItem>\n                  ))\n                  : (\n                    <ListItem button className={classes.nested}>\n                      <ListItemText secondary={translation?.random?.dialog?.empty} />\n                    </ListItem>\n                  )\n              }\n            </List>\n          </Collapse>\n        </List>\n      </DialogContent>\n\n      {/* <ListItemIcon>\n                        <SendIcon />\n                    </ListItemIcon> */}\n      <DialogActions>\n        <Button onClick={onClose} autoFocus color=\"secondary\">\n          {' '}\n          {/* color=\"primary\" */}\n          {translation?.random?.dialog?.returnButton}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\n\nimport { RandomItem } from './locationList'; // type only\nimport { TranslationContext } from '../translation/TranslationContext';\ninterface CheckDialogProps {\n  randomList: RandomItem[];\n  onClose?: (event: {} | React.MouseEvent, submitList: RandomItem[] | null, reason?: \"backdropClick\" | \"escapeKeyDown\") => void;\n  open: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  nested: {\n    paddingLeft: theme.spacing(2),\n  },\n}));\n\n\nexport default function CheckDialog({\n  randomList, onClose, open,\n}: CheckDialogProps) {\n  const classes = useStyles();\n  const { translation } = useContext(TranslationContext);\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const sortedList = randomList.map((item) => ({\n    ...item,\n    weight: item.defaultWeight,\n  } as RandomItem)).sort((a, b) => b.defaultWeight - a.defaultWeight);\n  \n  const [list, setList] = useState(sortedList);\n\n  function handleChange (inputName: string) {\n    return function (evt: React.ChangeEvent<HTMLInputElement>) {\n      const value = +evt.target.value;\n      setList((list: RandomItem[]) => {\n        const newList = [...list];\n        const changedItem = newList.find((item) => item.id === inputName) as RandomItem;\n        changedItem.weight = value > 0 ? value : 0;\n        return newList;\n      });\n    }\n  }\n\n  function handleClose (isSubmitting: boolean) {\n    return function (evt: React.MouseEvent, reason?: \"backdropClick\" | \"escapeKeyDown\") {\n      onClose?.(evt, isSubmitting ? list : null, reason);\n    }\n  }\n\n  function getName (id: string, isAlias: boolean = false) {\n    return (translation?.random?.locationList as any)?.[id ?? '']?.[isAlias ? 'alias' : 'name'];\n  }\n\n  return (\n    <Dialog\n      onClose={handleClose(false)}\n      aria-labelledby=\"customize-dialog-title\"\n      open={open}\n      fullScreen={fullScreen}\n      fullWidth\n      maxWidth=\"sm\"\n    >\n      <DialogTitle id=\"customize-dialog-title\">{translation?.random?.dialog?.customizeTitle}</DialogTitle>\n      <DialogContent>\n        <form autoComplete=\"off\">\n          <List component=\"div\" disablePadding>\n            {\n              list.map((item) => (\n                <ListItem key={item.id} button className={classes.nested}>\n                  <ListItemText\n                    primary={`${getName(item.id)} ${getName(item.id, true) ? `(${getName(item.id, true)})` : ''}`}\n                    secondary={`${translation?.random?.dialog?.defaultWeightTag}${item.defaultWeight}`}\n                  />\n                  <TextField\n                    id={`input-${item.id}`} label={translation?.random?.dialog?.weight}\n                    // defaultValue={item.defaultWeight}\n                    required\n                    type=\"number\"\n                    value={item.weight}\n                    onChange={handleChange(item.id)}\n                  />\n                </ListItem>\n              ))\n            }\n          </List>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose(true)} color=\"secondary\">\n          {translation?.random?.dialog?.submitButton}\n        </Button>\n        <Button onClick={handleClose(false)} color=\"primary\">\n          {translation?.random?.dialog?.cancelButton}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { useReducer } from 'react';\r\nimport { Coords } from './useGeolocation';\r\nimport getDistance from './getDistance';\r\n\r\nimport { RandomItem } from './locationList';\r\n\r\nexport interface StateItem extends RandomItem {\r\n    weight: number;\r\n    distance?: number;\r\n    // pinLayer?: any; // for OpenLayers, if needed\r\n}\r\n\r\ninterface State {\r\n    pickedItem: StateItem | null;\r\n    originalList: RandomItem[];\r\n    condition: Condition;\r\n    coords?: Coords;\r\n    randomList: StateItem[];\r\n    pickedList: StateItem[];\r\n    totalWeight: number;\r\n    done: boolean;\r\n}\r\n\r\nexport type Condition = 'default' | 'nearest' | 'customize';\r\ninterface PickAction {\r\n    type: 'pick';\r\n}\r\ninterface ResetAction {\r\n    type: 'reset';\r\n    condition?: Condition;\r\n    originalList?: RandomItem[];\r\n    coords?: Coords;\r\n}\r\ntype Action = PickAction | ResetAction;\r\n\r\nfunction reducer (state: State, action: Action) {\r\n    switch (action.type) {\r\n        case 'pick':\r\n            if (state.randomList.length === 0) return {\r\n                ...state,\r\n                done: true,\r\n            };\r\n            let randomNumber = Math.random() * state.totalWeight;\r\n            let pickedItem = { weight: 0 } as StateItem;\r\n            for (let item of state.randomList) {\r\n              randomNumber -= item.weight;\r\n              if (randomNumber < 0) {\r\n                pickedItem = item;\r\n                break;\r\n              }\r\n            }\r\n            return {\r\n                ...state,\r\n                pickedItem,\r\n                randomList: state.randomList.filter((item) => item !== pickedItem),\r\n                pickedList: [...state.pickedList, pickedItem],\r\n                totalWeight: state.totalWeight - pickedItem.weight,\r\n                done: false,\r\n            };\r\n        \r\n        case 'reset':\r\n            const originalList = action.originalList ?? state.originalList;\r\n            const condition = action.condition ?? state.condition;\r\n            const coords = action.coords ?? state.coords;\r\n            return init(originalList, condition, coords);\r\n        default:\r\n            throw new TypeError('Wrong action.type!');\r\n    }\r\n}\r\n\r\nfunction init (initialList: RandomItem[], condition: Condition = 'default', coords?: Coords): State {\r\n    const randomList: StateItem[] = initialList.map((item) => ({\r\n            ...item,\r\n            weight: getWeight(condition, item, coords),\r\n        }));\r\n    return {\r\n        pickedItem: null,\r\n        originalList: [...initialList], // shallow copy of initialList\r\n        condition,\r\n        coords,\r\n        randomList,\r\n        pickedList: [],\r\n        totalWeight: randomList.reduce((acc, item) => acc + item.weight, 0),\r\n        done: false,\r\n    };\r\n}\r\n\r\nfunction getWeight (condition: Condition, item: RandomItem, coords?: Coords) {\r\n    switch (condition) {\r\n        case 'nearest':\r\n            if (!coords) throw new TypeError('coords does not exist!');\r\n            const distance = getDistance(item, coords);\r\n            if (distance < 500) return item.defaultWeight*4;\r\n            if (distance < 1000) return item.defaultWeight*3;\r\n            if (distance < 2000) return item.defaultWeight*2;\r\n            else return item.defaultWeight*1;\r\n        case 'customize':\r\n            return item.weight ?? item.defaultWeight;\r\n        default:\r\n            return item.defaultWeight;\r\n    }\r\n}\r\n\r\nexport default function useRandomizer (initialList: RandomItem[]) {\r\n    return useReducer(reducer, initialList, init);\r\n}","import { Coords } from './useGeolocation';\n\n/**\n * Get the distance between two location.\n * Ref: https://stackoverflow.com/questions/27928/calculate-distance-between-two-latitude-longitude-points-haversine-formula\n */\nexport default function getDistance (point1: Coords, point2: Coords, radius = 6371000) {\n    const toRad = (deg: number) => Math.PI * deg / 180;\n    const [lat1, lat2, long1, long2] = [point1.latitude, point2.latitude, point1.longitude, point2.longitude].map(toRad);\n    const delta_lat = lat2 - lat1;\n    const delta_long = long2 - long1;\n\n    const a = Math.sin(delta_lat / 2) ** 2 +\n        Math.cos(lat1) * Math.cos(lat2) * Math.sin(delta_long / 2) ** 2\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n};","export interface RandomItem {\n    id: string;\n    defaultWeight: number;\n    weight?: number;\n    latitude: number;\n    longitude: number;\n}\n\nexport const locationList: RandomItem[] =  [ // ver '1.0.0-gamma'\n    { id: 'XiaoFu', latitude: 25.018525, longitude: 121.537426, defaultWeight: 4 },\n    { id: 'ApexBuilding', latitude: 25.014697, longitude: 121.537902, defaultWeight: 4 },\n    { id: 'TsunHsien', latitude: 25.013202, longitude: 121.536323, defaultWeight: 2 },\n    { id: 'NewMoonPavilion', latitude: 25.018563, longitude: 121.534016, defaultWeight: 1 },\n    { id: 'DrunkenMoonLake', latitude: 25.020154, longitude: 121.538194, defaultWeight: 2 },\n    { id: 'SportsCenter', latitude: 25.021653, longitude: 121.535130, defaultWeight: 1 },\n    { id: 'CheeChun', latitude: 25.021739, longitude: 121.537294, defaultWeight: 1 },\n    { id: 'M1', latitude: 25.015991, longitude: 121.544738, defaultWeight: 4 },\n    { id: 'M7', latitude: 25.015175, longitude: 121.546959, defaultWeight: 1 },\n    { id: 'M8', latitude: 25.016973, longitude: 121.544982, defaultWeight: 1 },\n    { id: 'F9', latitude: 25.019434, longitude: 121.539474, defaultWeight: 2 },\n    { id: 'XiaoXiaoFu', latitude: 25.015451, longitude: 121.537217, defaultWeight: 2 },\n    { id: '118', latitude: 25.021954, longitude: 121.542822, defaultWeight: 4 },\n    { id: 'Wenzhou', latitude: 25.018717, longitude: 121.533541, defaultWeight: 4 },\n    { id: 'Gongguan', latitude: 25.016049, longitude: 121.532804, defaultWeight: 4 },\n    { id: 'Shuiyuan', latitude: 25.013742, longitude: 121.534973, defaultWeight: 4 }\n];","import React, { useContext } from 'react';\r\n\r\nimport RandomTab from './RandomTab';\r\n\r\nimport RandomFab from './RandomFab';\r\nimport ResultCard from './ResultCard';\r\n// import RadioButtonsGroup from './RadioButtonsGroup';\r\nimport CheckDialog from './CheckDialog';\r\nimport CustomizeDialog from './CustomizeDialog';\r\n\r\nimport useRandomizer, { Condition } from './useRandomizer';\r\nimport useGeolocation from './useGeolocation';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { TranslationContext } from '../translation/TranslationContext';\r\n\r\nimport { locationList, RandomItem } from './locationList';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    result: {\r\n        color: theme.palette.grey[100],\r\n        textAlign: 'center',\r\n    },\r\n\r\n    gridContainer: {\r\n        flexGrow: 1,\r\n        margin: 0,\r\n        width: '100%',\r\n        padding: theme.spacing(2),\r\n    },\r\n\r\n    gridItem: {\r\n        // margin: theme.spacing(1),\r\n    },\r\n\r\n    snackbar: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            bottom: 90,\r\n        },\r\n    },\r\n\r\n}));\r\n\r\nexport default function Random() {\r\n    const classes = useStyles();\r\n    const { translation } = useContext(TranslationContext);\r\n    const [{ pickedItem, totalWeight, randomList, pickedList, originalList, done }, dispatch] = useRandomizer(locationList);\r\n    const [tabIndex, setTabIndex] = React.useState(0);\r\n    const [randomType, setRandomType] = React.useState('default' as Condition);\r\n    const [isCheckDialogOpen, setCheckDialogOpen] = React.useState(false);\r\n    const [isCustomizeDialogOpen, setCustomizeDialogOpen] = React.useState(false);\r\n    const [isSnackBarOpen, setSnackBarOpen] = React.useState(false);\r\n    const { coords, isPending: isDetecting, startGeolocation } = useGeolocation();\r\n\r\n    const randomTypeList = [\r\n        { id: 'default' as Condition, name: translation?.random?.randomType?.default },\r\n        { id: 'nearest' as Condition, name: translation?.random?.randomType?.nearest },\r\n        { id: 'customize' as Condition, name: translation?.random?.randomType?.customize }, // , disabled: true\r\n    ];\r\n\r\n    React.useEffect(() => {\r\n        if (done) setSnackBarOpen(true);\r\n    }, [done]);\r\n\r\n    React.useEffect(() => {\r\n        if (randomType === 'nearest' && !isDetecting) {\r\n            dispatch({ type: 'reset', condition: 'nearest', coords });\r\n        }\r\n    }, [randomType, isDetecting, dispatch, coords]);\r\n\r\n    function handleChangeIndex(evt: React.ChangeEvent<{}>, newValue: number) {\r\n        const newRandomType = randomTypeList[newValue].id\r\n        setRandomType(newRandomType);\r\n        setTabIndex(newValue);\r\n\r\n        if (newRandomType === 'nearest') {\r\n            startGeolocation();\r\n            return; // handle in second useEffect\r\n        };\r\n\r\n        if (newRandomType === 'customize') {\r\n            setCustomizeDialogOpen(true);\r\n            return; // handle in handleCustomizeDialogClose\r\n        };\r\n\r\n        dispatch({ type: 'reset', originalList: locationList, condition: newRandomType });\r\n    }\r\n\r\n    function handleFabClick() {\r\n        if (done) dispatch({ type: 'reset', condition: randomType, coords });\r\n        else dispatch({ type: 'pick' });\r\n    }\r\n\r\n    // will be delete?\r\n    /* function handleLocationChange(evt) {\r\n        setRandomType(evt.target.value);\r\n        dispatch({ type: 'reset', payload: locationList, condition: evt.target.value });\r\n    } */\r\n\r\n    function handleCheckClick() {\r\n        setCheckDialogOpen(true);\r\n    }\r\n    function handleResetClick(evt: React.MouseEvent) {\r\n        dispatch({ type: 'reset', /* condition: randomType */ }); // if (done) \r\n    }\r\n\r\n    function handleCustomizeDialogClose (event: React.MouseEvent | {}, submitList: RandomItem[] | null) {\r\n        setCustomizeDialogOpen(false);\r\n        if (submitList == null) {\r\n            setTabIndex(0);\r\n            setRandomType('default');\r\n            dispatch({ type: 'reset', originalList: locationList, condition: 'default' });\r\n            return;\r\n        }\r\n        dispatch({ type: 'reset', condition: 'customize', originalList: submitList });\r\n    }\r\n\r\n    function getTitle (title?: string) {\r\n        if (randomType === 'nearest' && isDetecting === true) return translation?.random?.resultCard?.locating;\r\n        return title ?? translation?.random?.resultCard?.defaultTitle;\r\n    }\r\n\r\n    return <>\r\n        <RandomTab index={tabIndex} onChangeIndex={handleChangeIndex} list={randomTypeList} />\r\n\r\n        <Grid container justify=\"center\" alignItems=\"center\" className={classes.gridContainer}> {/* spacing={3} */}\r\n            {/* <Grid item xs={12} sm={6}>\r\n                    <RadioButtonsGroup\r\n                        value={randomType}\r\n                        onChange={handleLocationChange}\r\n                    />\r\n                </Grid> */}\r\n            <Grid item xs={12} sm={6} md={4} className={classes.gridItem}>\r\n                <ResultCard\r\n                    title={getTitle((translation?.random?.locationList as any)?.[pickedItem?.id ?? '']?.name)}\r\n                    subtitle={(translation?.random?.locationList as any)?.[pickedItem?.id ?? '']?.alias}\r\n                    onResetClick={handleResetClick}\r\n                    onCheckClick={handleCheckClick}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n\r\n        <RandomFab isResetButton={done} onClick={handleFabClick} disabled={isDetecting} />\r\n        <CheckDialog randomList={randomList} pickedList={pickedList} totalWeight={totalWeight} open={isCheckDialogOpen} onClose={() => setCheckDialogOpen(false)} />\r\n        <CustomizeDialog randomList={originalList} open={isCustomizeDialogOpen} onClose={handleCustomizeDialogClose} />\r\n        <Snackbar\r\n            open={isSnackBarOpen}\r\n            autoHideDuration={3000}\r\n            message={translation?.random?.snackbar?.msg}\r\n            onClose={() => setSnackBarOpen(false)}\r\n            action={\r\n                <Button color=\"inherit\" size=\"small\" onClick={handleResetClick}>\r\n                    {translation?.random?.snackbar?.button}\r\n                </Button>\r\n            }\r\n            className={classes.snackbar}\r\n        />\r\n    </>;\r\n}","import { useEffect, useState } from 'react';\n\nexport interface Coords {\n    latitude: number;\n    longitude: number;\n}\n\nexport default function useGeolocation (maximumAge: number = 0, timeout: number = 5000) {\n    const [coords, setCoords] = useState({\n        latitude: 0,\n        longitude: 0,\n    } as Coords);\n    const [isPending, setPending] = useState(false);\n\n    useEffect(() => {\n        if (!isPending) return;\n        console.log(isPending)\n        \n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(resolve, reject, {\n                    enableHighAccuracy: true,\n                    timeout,\n                    maximumAge,\n            });\n        }\n        else {\n            throw new ReferenceError('瀏覽器不支援 Geolocation 功能！');\n        }\n\n        function resolve ({ coords: { latitude, longitude } }: { coords: Coords }) {\n            setCoords({ latitude, longitude });\n            setPending(false);\n        }\n\n        function reject (err: PositionError) {\n            throw err;\n        }\n\n    }, [maximumAge, timeout, isPending]);\n\n    return { coords, isPending, startGeolocation: () => setPending(true) };\n}"],"sourceRoot":""}