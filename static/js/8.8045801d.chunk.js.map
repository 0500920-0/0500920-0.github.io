{"version":3,"sources":["RandomRestaurant/RandomTab.tsx","RandomRestaurant/RandomFab.tsx","RandomRestaurant/ResultCard.tsx","RandomRestaurant/CheckDialog.tsx","RandomRestaurant/CustomizeDialog.tsx","RandomRestaurant/useRandomizer.ts","RandomRestaurant/getDistance.tsx","RandomRestaurant/locationList.ts","RandomRestaurant/Random.tsx","RandomRestaurant/useGeolocation.tsx"],"names":["RandomTab","tabIndex","index","onChangeIndex","list","props","AppBar","position","color","Tabs","value","onChange","indicatorColor","textColor","centered","aria-label","map","item","idx","Tab","key","id","label","name","aria-controls","disabled","useStyles","makeStyles","theme","absolute","bottom","spacing","right","extendedIcon","marginRight","RandomFab","onClick","isResetButton","classes","useTheme","translation","useTranslation","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","Zoom","in","timeout","style","transitionDelay","unmountOnExit","Tooltip","title","random","fab","pick","Fab","className","undefined","variant","reset","root","minWidth","padding","textAlign","actions","ResultCard","subtitle","onResetClick","onCheckClick","Card","CardContent","Typography","component","CardActions","Button","size","resultCard","resetButton","checkButton","nested","paddingLeft","CheckDialog","pickedList","randomList","totalWeight","onClose","open","React","useState","isCheckExpended","setCheckExpend","isLeftExpended","setLeftExpend","fullScreen","useMediaQuery","breakpoints","down","leftList","sort","a","b","weight","leftListWeightTotal","getName","isAlias","locationList","Dialog","aria-labelledby","fullWidth","maxWidth","DialogTitle","dialog","checkTitle","DialogContent","List","ListItem","button","ListItemText","primary","Collapse","disablePadding","length","secondary","toFixed","empty","DialogActions","autoFocus","returnButton","sortedList","defaultWeight","setList","handleClose","isSubmitting","evt","reason","customizeTitle","autoComplete","inputName","defaultWeightTag","TextField","required","type","target","newList","find","submitButton","cancelButton","reducer","state","action","done","randomNumber","Math","pickedItem","filter","init","originalList","condition","coords","TypeError","initialList","getWeight","reduce","acc","distance","point1","point2","radius","latitude","longitude","deg","PI","lat1","lat2","long1","delta_lat","delta_long","sin","cos","atan2","sqrt","getDistance","result","palette","grey","gridContainer","flexGrow","margin","width","gridItem","snackbar","Random","useReducer","dispatch","setTabIndex","randomType","setRandomType","isCheckDialogOpen","setCheckDialogOpen","isCustomizeDialogOpen","setCustomizeDialogOpen","isSnackBarOpen","setSnackBarOpen","maximumAge","setCoords","isPending","setPending","useEffect","console","log","navigator","geolocation","ReferenceError","getCurrentPosition","err","enableHighAccuracy","startGeolocation","useGeolocation","isDetecting","randomTypeList","default","nearest","customize","handleResetClick","newValue","newRandomType","Grid","container","justify","alignItems","xs","sm","md","locating","defaultTitle","getTitle","alias","event","submitList","Snackbar","autoHideDuration","message","msg"],"mappings":"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","file":"static/js/8.8045801d.chunk.js","sourcesContent":["import React from 'react';\n\nimport AppBar, { AppBarProps } from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n// import SwipeableViews from 'react-swipeable-views';\n\nimport { Condition } from './useRandomizer'; // type only\ninterface TabListItem {\n  id: Condition;\n  name: string;\n  disabled?: boolean;\n}\ninterface RandomTabProps extends AppBarProps {\n  index: number;\n  onChangeIndex?: ((event: React.ChangeEvent<{}>, value: number) => void) | undefined;\n  list: TabListItem[];\n}\n\nexport default function RandomTab({ index: tabIndex, onChangeIndex, list, ...props }: RandomTabProps) {\n  return (\n    <AppBar position=\"static\" color=\"default\" {...props}>\n      <Tabs\n        value={tabIndex}\n        onChange={onChangeIndex}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        centered\n        aria-label=\"full width tabs\"\n      >\n        {' '}\n        {/* centered variant=\"scrollable|fullWidth\" scrollButtons=\"auto|on|off\" */}\n        {list.map((item, idx) => <Tab key={item.id} label={item.name} id={`tab-${idx}`} aria-controls={`tabpanel-${idx}`} disabled={item.disabled} />)}\n      </Tabs>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip, { TooltipProps } from '@material-ui/core/Tooltip';\n\nimport Zoom from '@material-ui/core/Zoom';\n\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { useTranslation } from '../hooks/TranslationContext';\n\ninterface RandomFabProps extends Partial<TooltipProps> {\n  onClick?: (event: React.MouseEvent) => void;\n  isResetButton?: boolean;\n  disabled?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  absolute: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function RandomFab({ onClick, isResetButton, disabled = false, ...props }: RandomFabProps) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { translation } = useTranslation();\n\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  };\n\n  return (\n    <>\n      <Zoom\n        in={!isResetButton}\n        timeout={transitionDuration}\n        style={{\n          transitionDelay: `${!isResetButton ? transitionDuration.exit : 0}ms`,\n        }}\n        unmountOnExit\n      >\n        <Tooltip title={translation?.random?.fab?.pick} aria-label={translation?.random?.fab?.pick} {...props}>\n          <Fab\n            color=\"primary\"\n            className={classes.absolute}\n            onClick={disabled ? undefined : onClick}\n            variant=\"extended\"\n          >\n            <NotListedLocationIcon className={classes.extendedIcon} />\n            {translation?.random?.fab?.pick}\n          </Fab>\n        </Tooltip>\n      </Zoom>\n      <Zoom\n        in={isResetButton}\n        timeout={transitionDuration}\n        style={{\n          transitionDelay: `${isResetButton ? transitionDuration.exit : 0}ms`,\n        }}\n        unmountOnExit\n      >\n        <Tooltip title={translation?.random?.fab?.reset} aria-label={translation?.random?.fab?.reset} {...props}>\n          <Fab\n            color=\"secondary\"\n            className={classes.absolute}\n            onClick={disabled ? undefined : onClick}\n            variant=\"extended\"\n          >\n            <RefreshIcon className={classes.extendedIcon} />\n            {translation?.random?.fab?.reset}\n          </Fab>\n        </Tooltip>\n      </Zoom>\n    </>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card, { CardProps } from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslation } from '../hooks/TranslationContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    // height: 128,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    // color: theme.palette.text.secondary,\n  },\n  actions: {\n\n  },\n}));\n\ninterface ResultCardProps extends CardProps {\n  title: string;\n  subtitle?: string;\n  onResetClick?: (event: React.MouseEvent) => void;\n  onCheckClick?: (event: React.MouseEvent) => void;\n}\n\nexport default function ResultCard({ title, subtitle, onResetClick, onCheckClick, ...props }: ResultCardProps) {\n  const classes = useStyles();\n  const { translation } = useTranslation();\n\n  return (\n    <Card className={classes.root} {...props}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {subtitle ?? <br/>}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button size=\"small\" onClick={onResetClick} color=\"secondary\">{translation?.random?.resultCard?.resetButton}</Button>\n        <Button size=\"small\" onClick={onCheckClick} color=\"secondary\">{translation?.random?.resultCard?.checkButton}</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\n\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n\nimport { StateItem } from './useRandomizer'; // type only\nimport { useTranslation } from '../hooks/TranslationContext';\ninterface CheckDialogProps extends DialogProps {\n  pickedList: StateItem[];\n  randomList: StateItem[];\n  totalWeight: number;\n  onClose?: (event: {} | React.MouseEvent, reason?: \"backdropClick\" | \"escapeKeyDown\") => void;\n  open: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\n\nexport default function CheckDialog({ pickedList, randomList, totalWeight, onClose, open, ...props }: CheckDialogProps) {\n  const classes = useStyles();\n  const { translation } = useTranslation();\n\n  const [isCheckExpended, setCheckExpend] = React.useState(false);\n  const [isLeftExpended, setLeftExpend] = React.useState(true);\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const leftList = [...randomList].sort((a, b) => b.weight - a.weight);\n  const leftListWeightTotal = totalWeight; // leftList.reduce((acc, item) => acc + item.weight, 0);\n  // const pickedList = list.filter((item) => item.picked);\n\n  function getName (id: string, isAlias: boolean = false) {\n    return (translation?.random?.locationList as any)?.[id ?? '']?.[isAlias ? 'alias' : 'name'];\n  }\n\n  return (\n    <Dialog\n      onClose={onClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n      fullScreen={fullScreen}\n      fullWidth\n      maxWidth=\"sm\"\n      {...props}\n    >\n      {' '}\n      {/* scroll=\"body\" */}\n      <DialogTitle id=\"simple-dialog-title\">{translation?.random?.dialog?.checkTitle}</DialogTitle>\n      <DialogContent>\n        <List>\n          <ListItem button onClick={() => setLeftExpend(!isLeftExpended)}>\n            <ListItemText primary={translation?.random?.dialog?.leftList} />\n            {isLeftExpended ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={isLeftExpended} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {\n                leftList.length\n                  ? leftList.map((item) => (\n                    <ListItem key={item.id} button className={classes.nested}>\n                      <ListItemText\n                        primary={`${getName(item.id)} ${getName(item.id, true) ? `(${getName(item.id, true)})` : ''}`}\n                        secondary={`${((item.weight / leftListWeightTotal) * 100).toFixed(2)}%`}\n                      />\n                    </ListItem>\n                  ))\n                  : (\n                    <ListItem button className={classes.nested}>\n                      <ListItemText secondary={translation?.random?.dialog?.empty} />\n                    </ListItem>\n                  )\n              }\n            </List>\n          </Collapse>\n          <ListItem button onClick={() => setCheckExpend(!isCheckExpended)}>\n            <ListItemText primary={translation?.random?.dialog?.pickedList} />\n            {isCheckExpended ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={isCheckExpended} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {\n                pickedList.length\n                  ? pickedList.map((item) => (\n                    <ListItem key={item.id} button className={classes.nested}>\n                      <ListItemText primary={`${getName(item.id)}`} />\n                    </ListItem>\n                  ))\n                  : (\n                    <ListItem button className={classes.nested}>\n                      <ListItemText secondary={translation?.random?.dialog?.empty} />\n                    </ListItem>\n                  )\n              }\n            </List>\n          </Collapse>\n        </List>\n      </DialogContent>\n\n      {/* <ListItemIcon>\n                        <SendIcon />\n                    </ListItemIcon> */}\n      <DialogActions>\n        <Button onClick={onClose} autoFocus color=\"secondary\">\n          {' '}\n          {/* color=\"primary\" */}\n          {translation?.random?.dialog?.returnButton}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\n\nimport { RandomItem } from './locationList'; // type only\nimport { useTranslation } from '../hooks/TranslationContext';\ninterface CheckDialogProps extends Omit<DialogProps, 'onClose'> {\n  randomList: RandomItem[];\n  onClose?: (event: React.MouseEvent, submitList: RandomItem[] | null, reason?: \"backdropClick\" | \"escapeKeyDown\") => void;\n  open: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  nested: {\n    paddingLeft: theme.spacing(2),\n  },\n}));\n\n\nexport default function CheckDialog({\n  randomList, onClose, open, ...props\n}: CheckDialogProps) {\n  const classes = useStyles();\n  const { translation } = useTranslation();\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const sortedList = randomList.map((item) => ({\n    ...item,\n    weight: item.defaultWeight,\n  } as RandomItem)).sort((a, b) => b.defaultWeight - a.defaultWeight);\n  \n  const [list, setList] = useState(sortedList);\n\n  function handleChange (inputName: string) {\n    return function (evt: React.ChangeEvent<HTMLInputElement>) {\n      const value = +evt.target.value;\n      setList((list: RandomItem[]) => {\n        const newList = [...list];\n        const changedItem = newList.find((item) => item.id === inputName) as RandomItem;\n        changedItem.weight = value > 0 ? value : 0;\n        return newList;\n      });\n    }\n  }\n\n  function handleClose (isSubmitting: boolean) {\n    return function (evt: React.MouseEvent, reason?: \"backdropClick\" | \"escapeKeyDown\") {\n      onClose?.(evt, isSubmitting ? list : null, reason);\n    }\n  }\n\n  function getName (id: string, isAlias: boolean = false) {\n    return (translation?.random?.locationList as any)?.[id ?? '']?.[isAlias ? 'alias' : 'name'];\n  }\n\n  return (\n    <Dialog\n      onClose={handleClose(false)}\n      aria-labelledby=\"customize-dialog-title\"\n      open={open}\n      fullScreen={fullScreen}\n      fullWidth\n      maxWidth=\"sm\"\n      {...props}\n    >\n      <DialogTitle id=\"customize-dialog-title\">{translation?.random?.dialog?.customizeTitle}</DialogTitle>\n      <DialogContent>\n        <form autoComplete=\"off\">\n          <List component=\"div\" disablePadding>\n            {\n              list.map((item) => (\n                <ListItem key={item.id} button className={classes.nested}>\n                  <ListItemText\n                    primary={`${getName(item.id)} ${getName(item.id, true) ? `(${getName(item.id, true)})` : ''}`}\n                    secondary={`${translation?.random?.dialog?.defaultWeightTag}${item.defaultWeight}`}\n                  />\n                  <TextField\n                    id={`input-${item.id}`} label={translation?.random?.dialog?.weight}\n                    // defaultValue={item.defaultWeight}\n                    required\n                    type=\"number\"\n                    value={item.weight}\n                    onChange={handleChange(item.id)}\n                  />\n                </ListItem>\n              ))\n            }\n          </List>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose(true)} color=\"secondary\">\n          {translation?.random?.dialog?.submitButton}\n        </Button>\n        <Button onClick={handleClose(false)} color=\"primary\">\n          {translation?.random?.dialog?.cancelButton}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { useReducer } from 'react';\r\nimport { Coords } from './useGeolocation';\r\nimport getDistance from './getDistance';\r\n\r\nimport { RandomItem } from './locationList';\r\n\r\nexport interface StateItem extends RandomItem {\r\n    weight: number;\r\n    distance?: number;\r\n    // pinLayer?: any; // for OpenLayers, if needed\r\n}\r\n\r\ninterface State {\r\n    pickedItem: StateItem | null;\r\n    originalList: RandomItem[];\r\n    condition: Condition;\r\n    coords?: Coords;\r\n    randomList: StateItem[];\r\n    pickedList: StateItem[];\r\n    totalWeight: number;\r\n    done: boolean;\r\n}\r\n\r\nexport type Condition = 'default' | 'nearest' | 'customize';\r\ninterface PickAction {\r\n    type: 'pick';\r\n}\r\ninterface ResetAction {\r\n    type: 'reset';\r\n    condition?: Condition;\r\n    originalList?: RandomItem[];\r\n    coords?: Coords;\r\n}\r\ntype Action = PickAction | ResetAction;\r\n\r\nfunction reducer (state: State, action: Action) {\r\n    switch (action.type) {\r\n        case 'pick':\r\n            if (state.randomList.length === 0) return {\r\n                ...state,\r\n                done: true,\r\n            };\r\n            let randomNumber = Math.random() * state.totalWeight;\r\n            let pickedItem = { weight: 0 } as StateItem;\r\n            for (let item of state.randomList) {\r\n              randomNumber -= item.weight;\r\n              if (randomNumber < 0) {\r\n                pickedItem = item;\r\n                break;\r\n              }\r\n            }\r\n            return {\r\n                ...state,\r\n                pickedItem,\r\n                randomList: state.randomList.filter((item) => item !== pickedItem),\r\n                pickedList: [...state.pickedList, pickedItem],\r\n                totalWeight: state.totalWeight - pickedItem.weight,\r\n                done: false,\r\n            };\r\n        \r\n        case 'reset':\r\n            const originalList = action.originalList ?? state.originalList;\r\n            const condition = action.condition ?? state.condition;\r\n            const coords = action.coords ?? state.coords;\r\n            return init(originalList, condition, coords);\r\n        default:\r\n            throw new TypeError('Wrong action.type!');\r\n    }\r\n}\r\n\r\nfunction init (initialList: RandomItem[], condition: Condition = 'default', coords?: Coords): State {\r\n    const randomList: StateItem[] = initialList.map((item) => ({\r\n            ...item,\r\n            weight: getWeight(condition, item, coords),\r\n        }));\r\n    return {\r\n        pickedItem: null,\r\n        originalList: [...initialList], // shallow copy of initialList\r\n        condition,\r\n        coords,\r\n        randomList,\r\n        pickedList: [],\r\n        totalWeight: randomList.reduce((acc, item) => acc + item.weight, 0),\r\n        done: false,\r\n    };\r\n}\r\n\r\nfunction getWeight (condition: Condition, item: RandomItem, coords?: Coords) {\r\n    switch (condition) {\r\n        case 'nearest':\r\n            if (!coords) throw new TypeError('coords does not exist!');\r\n            const distance = getDistance(item, coords);\r\n            if (distance < 500) return item.defaultWeight*4;\r\n            if (distance < 1000) return item.defaultWeight*3;\r\n            if (distance < 2000) return item.defaultWeight*2;\r\n            else return item.defaultWeight*1;\r\n        case 'customize':\r\n            return item.weight ?? item.defaultWeight;\r\n        default:\r\n            return item.defaultWeight;\r\n    }\r\n}\r\n\r\nexport default function useRandomizer (initialList: RandomItem[]) {\r\n    return useReducer(reducer, initialList, init);\r\n}","import { Coords } from './useGeolocation';\n\n/**\n * Get the distance between two location.\n * Ref: https://stackoverflow.com/questions/27928/calculate-distance-between-two-latitude-longitude-points-haversine-formula\n */\nexport default function getDistance (point1: Coords, point2: Coords, radius = 6371000) {\n    const toRad = (deg: number) => Math.PI * deg / 180;\n    const [lat1, lat2, long1, long2] = [point1.latitude, point2.latitude, point1.longitude, point2.longitude].map(toRad);\n    const delta_lat = lat2 - lat1;\n    const delta_long = long2 - long1;\n\n    const a = Math.sin(delta_lat / 2) ** 2 +\n        Math.cos(lat1) * Math.cos(lat2) * Math.sin(delta_long / 2) ** 2\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n};","export interface RandomItem {\n    id: string;\n    defaultWeight: number;\n    weight?: number;\n    latitude: number;\n    longitude: number;\n}\n\nexport const locationList: RandomItem[] =  [ // ver '1.0.0-gamma'\n    { id: 'XiaoFu', latitude: 25.018525, longitude: 121.537426, defaultWeight: 4 },\n    { id: 'ApexBuilding', latitude: 25.014697, longitude: 121.537902, defaultWeight: 4 },\n    { id: 'TsunHsien', latitude: 25.013202, longitude: 121.536323, defaultWeight: 2 },\n    { id: 'NewMoonPavilion', latitude: 25.018563, longitude: 121.534016, defaultWeight: 1 },\n    { id: 'DrunkenMoonLake', latitude: 25.020154, longitude: 121.538194, defaultWeight: 2 },\n    { id: 'SportsCenter', latitude: 25.021653, longitude: 121.535130, defaultWeight: 1 },\n    { id: 'CheeChun', latitude: 25.021739, longitude: 121.537294, defaultWeight: 1 },\n    { id: 'M1', latitude: 25.015991, longitude: 121.544738, defaultWeight: 4 },\n    { id: 'M7', latitude: 25.015175, longitude: 121.546959, defaultWeight: 1 },\n    { id: 'M8', latitude: 25.016973, longitude: 121.544982, defaultWeight: 1 },\n    { id: 'F9', latitude: 25.019434, longitude: 121.539474, defaultWeight: 2 },\n    { id: 'XiaoXiaoFu', latitude: 25.015451, longitude: 121.537217, defaultWeight: 2 },\n    { id: '118', latitude: 25.021954, longitude: 121.542822, defaultWeight: 4 },\n    { id: 'Wenzhou', latitude: 25.018717, longitude: 121.533541, defaultWeight: 4 },\n    { id: 'Gongguan', latitude: 25.016049, longitude: 121.532804, defaultWeight: 4 },\n    { id: 'Shuiyuan', latitude: 25.013742, longitude: 121.534973, defaultWeight: 4 }\n];","import React from 'react';\r\n\r\nimport RandomTab from './RandomTab';\r\n\r\nimport RandomFab from './RandomFab';\r\nimport ResultCard from './ResultCard';\r\n// import RadioButtonsGroup from './RadioButtonsGroup';\r\nimport CheckDialog from './CheckDialog';\r\nimport CustomizeDialog from './CustomizeDialog';\r\n\r\nimport useRandomizer, { Condition } from './useRandomizer';\r\nimport useGeolocation from './useGeolocation';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useTranslation } from '../hooks/TranslationContext';\r\n\r\nimport { locationList, RandomItem } from './locationList';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    result: {\r\n        color: theme.palette.grey[100],\r\n        textAlign: 'center',\r\n    },\r\n\r\n    gridContainer: {\r\n        flexGrow: 1,\r\n        margin: 0,\r\n        width: '100%',\r\n        padding: theme.spacing(2),\r\n    },\r\n\r\n    gridItem: {\r\n        // margin: theme.spacing(1),\r\n    },\r\n\r\n    snackbar: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            bottom: 90,\r\n        },\r\n    },\r\n\r\n}));\r\n\r\nexport default function Random() {\r\n    const classes = useStyles();\r\n    const { translation } = useTranslation();\r\n    const [{ pickedItem, totalWeight, randomList, pickedList, originalList, done }, dispatch] = useRandomizer(locationList);\r\n    const [tabIndex, setTabIndex] = React.useState(0);\r\n    const [randomType, setRandomType] = React.useState('default' as Condition);\r\n    const [isCheckDialogOpen, setCheckDialogOpen] = React.useState(false);\r\n    const [isCustomizeDialogOpen, setCustomizeDialogOpen] = React.useState(false);\r\n    const [isSnackBarOpen, setSnackBarOpen] = React.useState(false);\r\n    const { coords, isPending: isDetecting, startGeolocation } = useGeolocation();\r\n\r\n    const randomTypeList = [\r\n        { id: 'default' as Condition, name: translation?.random?.randomType?.default },\r\n        { id: 'nearest' as Condition, name: translation?.random?.randomType?.nearest },\r\n        { id: 'customize' as Condition, name: translation?.random?.randomType?.customize }, // , disabled: true\r\n    ];\r\n\r\n    React.useEffect(() => {\r\n        if (done) setSnackBarOpen(true);\r\n    }, [done]);\r\n\r\n    React.useEffect(() => {\r\n        if (randomType === 'nearest' && !isDetecting) {\r\n            dispatch({ type: 'reset', condition: 'nearest', coords });\r\n        }\r\n    }, [randomType, isDetecting, dispatch, coords]);\r\n\r\n    function handleChangeIndex(evt: React.ChangeEvent<{}>, newValue: number) {\r\n        const newRandomType = randomTypeList[newValue].id\r\n        setRandomType(newRandomType);\r\n        setTabIndex(newValue);\r\n\r\n        if (newRandomType === 'nearest') {\r\n            startGeolocation();\r\n            return; // handle in second useEffect\r\n        };\r\n\r\n        if (newRandomType === 'customize') {\r\n            setCustomizeDialogOpen(true);\r\n            return; // handle in handleCustomizeDialogClose\r\n        };\r\n\r\n        dispatch({ type: 'reset', originalList: locationList, condition: newRandomType });\r\n    }\r\n\r\n    function handleFabClick() {\r\n        if (done) dispatch({ type: 'reset', condition: randomType, coords });\r\n        else dispatch({ type: 'pick' });\r\n    }\r\n\r\n    // will be delete?\r\n    /* function handleLocationChange(evt) {\r\n        setRandomType(evt.target.value);\r\n        dispatch({ type: 'reset', payload: locationList, condition: evt.target.value });\r\n    } */\r\n\r\n    function handleCheckClick() {\r\n        setCheckDialogOpen(true);\r\n    }\r\n    function handleResetClick(evt: React.MouseEvent) {\r\n        dispatch({ type: 'reset', /* condition: randomType */ }); // if (done) \r\n    }\r\n\r\n    function handleCustomizeDialogClose (event: React.MouseEvent | {}, submitList: RandomItem[] | null) {\r\n        setCustomizeDialogOpen(false);\r\n        if (submitList == null) {\r\n            setTabIndex(0);\r\n            setRandomType('default');\r\n            dispatch({ type: 'reset', originalList: locationList, condition: 'default' });\r\n            return;\r\n        }\r\n        dispatch({ type: 'reset', condition: 'customize', originalList: submitList });\r\n    }\r\n\r\n    function getTitle (title?: string) {\r\n        if (randomType === 'nearest' && isDetecting === true) return translation?.random?.resultCard?.locating;\r\n        return title ?? translation?.random?.resultCard?.defaultTitle;\r\n    }\r\n\r\n    return <>\r\n        <RandomTab index={tabIndex} onChangeIndex={handleChangeIndex} list={randomTypeList} />\r\n\r\n        <Grid container justify=\"center\" alignItems=\"center\" className={classes.gridContainer}> {/* spacing={3} */}\r\n            {/* <Grid item xs={12} sm={6}>\r\n                    <RadioButtonsGroup\r\n                        value={randomType}\r\n                        onChange={handleLocationChange}\r\n                    />\r\n                </Grid> */}\r\n            <Grid item xs={12} sm={6} md={4} className={classes.gridItem}>\r\n                <ResultCard\r\n                    title={getTitle((translation?.random?.locationList as any)?.[pickedItem?.id ?? '']?.name)}\r\n                    subtitle={(translation?.random?.locationList as any)?.[pickedItem?.id ?? '']?.alias}\r\n                    onResetClick={handleResetClick}\r\n                    onCheckClick={handleCheckClick}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n\r\n        <RandomFab isResetButton={done} onClick={handleFabClick} disabled={isDetecting} />\r\n        <CheckDialog randomList={randomList} pickedList={pickedList} totalWeight={totalWeight} open={isCheckDialogOpen} onClose={() => setCheckDialogOpen(false)} />\r\n        <CustomizeDialog randomList={originalList} open={isCustomizeDialogOpen} onClose={handleCustomizeDialogClose} />\r\n        <Snackbar\r\n            open={isSnackBarOpen}\r\n            autoHideDuration={3000}\r\n            message={translation?.random?.snackbar?.msg}\r\n            onClose={() => setSnackBarOpen(false)}\r\n            action={\r\n                <Button color=\"inherit\" size=\"small\" onClick={handleResetClick}>\r\n                    {translation?.random?.snackbar?.button}\r\n                </Button>\r\n            }\r\n            className={classes.snackbar}\r\n        />\r\n    </>;\r\n}","import { useEffect, useState } from 'react';\n\nexport interface Coords {\n    latitude: number;\n    longitude: number;\n}\n\nexport default function useGeolocation (maximumAge: number = 0, timeout: number = 5000) {\n    const [coords, setCoords] = useState({\n        latitude: 0,\n        longitude: 0,\n    } as Coords);\n    const [isPending, setPending] = useState(false);\n\n    useEffect(() => {\n        if (!isPending) return;\n        console.log(isPending)\n        \n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(resolve, reject, {\n                    enableHighAccuracy: true,\n                    timeout,\n                    maximumAge,\n            });\n        }\n        else {\n            throw new ReferenceError('瀏覽器不支援 Geolocation 功能！');\n        }\n\n        function resolve ({ coords: { latitude, longitude } }: { coords: Coords }) {\n            setCoords({ latitude, longitude });\n            setPending(false);\n        }\n\n        function reject (err: PositionError) {\n            throw err;\n        }\n\n    }, [maximumAge, timeout, isPending]);\n\n    return { coords, isPending, startGeolocation: () => setPending(true) };\n}"],"sourceRoot":""}