{"version":3,"sources":["NavBar/UpperRightMenu.tsx","NavBar/LanguageMenu.tsx","NavBar/BrightnessButton.tsx","icons/Science.tsx","NavBar/NavBar.tsx","Drawer/DrawerItem.tsx","Drawer/Drawer.tsx","App.tsx","darkTheme.ts","lightTheme.ts","serviceWorker.ts","index.tsx","hooks/TranslationContext.tsx","hooks/createTranslation.tsx","tubaAvatarSquare.png"],"names":["UpperRightMenu","React","useState","anchorEl","setAnchorEl","history","useHistory","translation","useTranslation","handleClose","IconButton","aria-controls","aria-haspopup","onClick","event","currentTarget","aria-label","color","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","goBack","ListItemIcon","fontSize","upperRightMenu","lastPage","window","location","reload","forceReload","print","LanguageMenu","showText","lang","setLang","useLocation","queryStringLang","useMemo","URLSearchParams","search","get","useEffect","supportedLanguageList","handleClick","Button","startIcon","Object","entries","map","langCode","langName","key","selected","replace","pathname","handleMenuItemClick","BrightnessButton","isDarkTheme","ScienceIcon","props","SvgIcon","d","useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","toolbar","mixins","NavBar","toggleDrawer","setDarkTheme","isSuspensed","classes","isPrinting","useMediaQuery","document","getTitle","AppBar","position","Toolbar","Typography","variant","className","edge","Hidden","mdUp","implementation","smDown","DrawerItem","path","external","isRouteMatched","useRouteMatch","exact","ListItem","button","component","href","target","rel","ListItemText","primary","Link","to","list","width","avatar","palette","getContrastText","background","paper","backgroundColor","ResponsiveDrawer","isDrawerOpened","isHome","drawerMain","role","onKeyDown","List","in","ListItemAvatar","Avatar","alt","src","avatarSource","drawer","name","secondary","department","Divider","home","periodicTable","random","about","profile","github","SwipeableDrawer","onOpen","ModalProps","Drawer","body","default","transition","transitions","duration","shortest","root","display","content","breakpoints","up","flexShrink","appBar","marginLeft","drawerPaper","Home","lazy","RandomRestaurant","About","PeriodicTable","App","setDrawerState","isOpen","type","drawerProps","navBarProps","Suspense","fallback","loading","createMuiTheme","main","teal","lightBlue","blueGrey","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Index","isDarkThemeDefault","undefined","TranslationContext","ThemeProvider","darkTheme","lightTheme","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker","translations","defaultLangStr","initialState","keys","createContext","useContext","TranslationContextProvider","children","setTranslation","a","fetchedTranslation","documentElement","Provider","value","createTranslation","language","module","exports"],"mappings":"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","file":"static/js/main.cc76153e.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport PrintIcon from '@material-ui/icons/Print';\nimport { useTranslation } from '../hooks/TranslationContext';\n\nexport default function UpperRightMenu() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const history = useHistory();\n\n  const { translation } = useTranslation();\n\n  const handleClick: ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void) = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleGoBack = () => {\n    handleClose();\n    history.goBack();\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        aria-label=\"display more actions\"\n        // edge=\"end\"\n        color=\"inherit\"\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleGoBack}>\n          <ListItemIcon>\n            <ArrowBackIcon fontSize=\"small\" />\n          </ListItemIcon>\n          {translation?.upperRightMenu?.lastPage}\n        </MenuItem>\n        <MenuItem onClick={() => window.location.reload(true)}>\n          <ListItemIcon>\n            <RefreshIcon fontSize=\"small\" />\n          </ListItemIcon>\n          {translation?.upperRightMenu?.forceReload}\n        </MenuItem>\n        <MenuItem onClick={() => window.print()}>\n          <ListItemIcon>\n            <PrintIcon fontSize=\"small\" />\n          </ListItemIcon>\n          {translation?.upperRightMenu?.print}\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React, { useMemo, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport TranslateIcon from '@material-ui/icons/Translate';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useTranslation, supportedLanguageList } from '../hooks/TranslationContext';\n\ninterface LanguageMenuProps {\n  showText?: boolean;\n}\nexport default function LanguageMenu({ showText = false }: LanguageMenuProps) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const { lang, setLang } = useTranslation();\n\n  \n  const location = useLocation();\n  const queryStringLang = useMemo(() => new URLSearchParams(location.search).get('lang'), [location.search]);\n  /* set lang only if query string is set, not vice-versa */\n  useEffect(() => {\n    if (queryStringLang && queryStringLang in supportedLanguageList) setLang(queryStringLang);\n  }, [queryStringLang, setLang]);\n  const history = useHistory();\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuItemClick = (event: React.MouseEvent<HTMLElement>, langCode: string) => {\n    setLang(langCode);\n    setAnchorEl(null);\n    history.replace(`${location.pathname}?lang=${langCode}`);\n  }\n\n  return (\n    <>\n      { showText ? (\n        <Button\n          aria-controls=\"language-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n          aria-label=\"change language\"\n          color=\"inherit\"\n          startIcon={<TranslateIcon/>}\n        >\n          {supportedLanguageList[lang]}\n        </Button>\n        ) : (\n        <IconButton // Button\n          aria-controls=\"language-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n          aria-label=\"change language\"\n          color=\"inherit\"\n        >\n          <TranslateIcon/>\n        </IconButton>\n      ) }\n      <Menu\n        id=\"language-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {Object.entries(supportedLanguageList).map(([langCode, langName]) => \n            <MenuItem \n                key={langCode}\n                selected={langCode === lang}\n                onClick={(event) => handleMenuItemClick(event, langCode)}\n            >\n              {langName}\n            </MenuItem>\n        )}\n      </Menu>\n    </>\n  );\n}\n","import React from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport DarkIcon from '@material-ui/icons/Brightness4';\nimport LightIcon from '@material-ui/icons/Brightness5';\n\nexport default function BrightnessButton({ isDarkTheme, onClick }: { isDarkTheme: boolean, onClick?: (event: React.MouseEvent) => void }) {\n\n  return (\n    <div>\n      <IconButton\n        aria-controls=\"brightness-button\"\n        onClick={onClick}\n        aria-label=\"change light / dark theme\"\n        // edge=\"end\"\n        color=\"inherit\"\n      >\n        {isDarkTheme ? <DarkIcon /> : <LightIcon/>}\n      </IconButton>\n    </div>\n  );\n}\n","import React from 'react';\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\n\n/** @see https://material.io/resources/icons/?search=lab&icon=science&style=baseline */\nexport default function ScienceIcon ({ ...props }: SvgIconProps) {\n  return <SvgIcon {...props}>\n    <path d=\"M19.8,18.4L14,10.67V6.5l1.35-1.69C15.61,4.48,15.38,4,14.96,4H9.04C8.62,4,8.39,4.48,8.65,4.81L10,6.5v4.17L4.2,18.4 C3.71,19.06,4.18,20,5,20h14C19.82,20,20.29,19.06,19.8,18.4z\" />\n  </SvgIcon>;\n}","import React, { useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport AppBar, { AppBarProps } from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Hidden from '@material-ui/core/Hidden';\nimport UpperRightMenu from './UpperRightMenu';\nimport LanguageMenu from './LanguageMenu';\nimport BrightnessButton from './BrightnessButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n// import GithubIcon from '@material-ui/icons/GitHub';\nimport ScienceIcon from '../icons/Science';\n\nimport { useTranslation } from '../hooks/TranslationContext';\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n}));\n\ninterface NavBarProps extends AppBarProps {\n  title?: string;\n  toggleDrawer: (isOpen: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => void;\n  isDarkTheme: boolean;\n  setDarkTheme?: (shouldSetDarkTheme: boolean) => void;\n  isSuspensed?: boolean\n}\nexport default function NavBar({ toggleDrawer, isDarkTheme, setDarkTheme, title, isSuspensed = false, ...props }: NavBarProps) {\n  const classes = useStyles();\n  const isPrinting = useMediaQuery('print');\n\n  const { translation } = useTranslation();\n  useEffect(() => {\n    if (isSuspensed || !title) return;\n    document.title = translation?.getTitle?.(title);\n  }, [title, isSuspensed, translation]);\n\n  if (isPrinting) return (\n    <>\n      <AppBar position=\"fixed\" {...props}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton color=\"inherit\" edge=\"end\">\n            <ScienceIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.toolbar} />\n    </>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" {...props}>\n        <Toolbar>\n          <Hidden mdUp implementation=\"css\">\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer(true)}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Hidden>\n          \n          <Typography variant=\"h6\" className={classes.title}>\n            {title}\n          </Typography>\n          \n          <Hidden smDown implementation=\"css\">\n            {/* <LinkButton path=\"/\" title={translation?.home?.title} startIcon={<HomeIcon />} />\n            <LinkButton path=\"/periodic-table\" title={translation?.periodicTable?.title} startIcon={<ScienceIcon />} />\n            <LinkButton path=\"/random\" title={translation?.random?.title} startIcon={<ExploreIcon />} />\n            <LinkButton path=\"/about\" title={translation?.about?.title} startIcon={<InfoIcon />}  /> */}\n            <LanguageMenu showText />\n            {/* <IconButton\n              color=\"inherit\"\n              aria-label=\"open link: github 0500920-0\"\n              href=\"https://github.com/0500920-0/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <GithubIcon />\n            </IconButton> */}\n          </Hidden>\n          <Hidden mdUp implementation=\"css\">\n            <LanguageMenu />\n          </Hidden>\n          <BrightnessButton isDarkTheme={isDarkTheme} onClick={() => setDarkTheme?.(!isDarkTheme)}/>\n          <UpperRightMenu />\n        </Toolbar>\n      </AppBar>\n      <div className={classes.toolbar} />\n    </>\n  );\n}\n","import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\ninterface DrawerItemProps extends ListItemProps {\n  path: string;\n  title: string;\n  startIcon: React.ReactNode;\n  external?: boolean;\n}\nexport default function DrawerItem ({ path, title, startIcon, external = false }: DrawerItemProps) {\n  const isRouteMatched = useRouteMatch({ path, exact: true });\n  if (external) return (\n    <ListItem\n      button\n      component=\"a\"\n      href={path}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      selected={!!isRouteMatched} // location.pathname === to\n    >\n      {' '}\n      {/* key={text} */}\n      <ListItemIcon>{startIcon}</ListItemIcon>\n      <ListItemText primary={title} />\n    </ListItem>\n  );\n  return (\n    <ListItem\n      button\n      component={Link}\n      to={(location: Object) => ({ ...location, pathname: path })}\n      selected={!!isRouteMatched} // location.pathname === to\n    >\n      {' '}\n      {/* key={text} */}\n      <ListItemIcon>{startIcon}</ListItemIcon>\n      <ListItemText primary={title} />\n    </ListItem>\n  );\n}","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport SwipeableDrawer, { SwipeableDrawerProps } from '@material-ui/core/SwipeableDrawer';\n\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Hidden from '@material-ui/core/Hidden';\nimport Slide from '@material-ui/core/Collapse';\n\nimport Avatar from '@material-ui/core/Avatar';\n// import { deepOrange } from '@material-ui/core/colors';\nimport avatarSource from '../tubaAvatarSquare.png';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport GithubIcon from '@material-ui/icons/GitHub';\nimport ScienceIcon from '../icons/Science';\n\nimport DrawerItem from './DrawerItem';\n\nimport { useTranslation } from '../hooks/TranslationContext';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    width: ({ width }: { width: number }) => width,\n  },\n  avatar: {\n    color: theme.palette.getContrastText(theme.palette.background.paper),\n    backgroundColor: theme.palette.background.paper, // deepOrange[500],\n  },\n}));\n\ninterface ResponsiveDrawerProps extends Partial<SwipeableDrawerProps> {\n  toggleDrawer(isOpen: boolean): (event: React.KeyboardEvent | React.MouseEvent) => void;\n  isDrawerOpened: boolean;\n  width: number;\n}\nexport default function ResponsiveDrawer({ toggleDrawer, isDrawerOpened, width, ...props }: ResponsiveDrawerProps) {\n  const classes = useStyles({ width });\n  const { translation } = useTranslation();\n  const isHome = useRouteMatch({ path: '/', exact: true });\n\n  const drawerMain = (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <List>\n        <Slide in={!isHome}>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar alt=\"Fong Meng Iao\" className={classes.avatar} src={avatarSource} />\n            </ListItemAvatar>\n            <ListItemText primary={translation?.drawer?.name} secondary={translation?.drawer?.department} />\n          </ListItem>\n        </Slide>\n        <Divider />\n        <DrawerItem path=\"/\" title={translation?.home?.title} startIcon={<HomeIcon />} />\n        <Divider />\n        <DrawerItem path=\"/periodic-table\" title={translation?.periodicTable?.title} startIcon={<ScienceIcon />} />\n        <DrawerItem path=\"/random\" title={translation?.random?.title} startIcon={<ExploreIcon />} />\n        <Divider />\n        <DrawerItem path=\"/about\" title={translation?.about?.title} startIcon={<InfoOutlined />} />\n        <DrawerItem path=\"https://0500920-0.github.io/resume/index.html\" external title={translation?.profile?.title} startIcon={<LaunchIcon />} />\n        <DrawerItem path=\"https://github.com/0500920-0\" external title={translation?.github?.title} startIcon={<GithubIcon />} />\n      </List>\n    </div>\n  );\n\n  return (\n    <>\n      <SwipeableDrawer\n        variant=\"temporary\"\n        open={isDrawerOpened}\n        onClose={toggleDrawer(false)}\n        onOpen={toggleDrawer(true)}\n        ModalProps={{ keepMounted: true }} // Better open performance on mobile.\n        {...props}\n      >\n        {drawerMain}\n      </SwipeableDrawer>\n      <Hidden mdUp implementation=\"css\">\n        <SwipeableDrawer\n          variant=\"temporary\"\n          open={isDrawerOpened}\n          onClose={toggleDrawer(false)}\n          onOpen={toggleDrawer(true)}\n          ModalProps={{ keepMounted: true }} // Better open performance on mobile.\n          {...props}\n        >\n          {drawerMain}\n        </SwipeableDrawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          variant=\"permanent\"\n          open\n        >\n          {drawerMain}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n  // Link\n} from 'react-router-dom';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport NavBar from './NavBar/NavBar';\nimport Drawer from './Drawer/Drawer';\n\nimport { useTranslation } from './hooks/TranslationContext';\n\nconst drawerWidth = 250;\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.background.default,\n      transition: `all ${theme.transitions.duration.shortest}ms ease-out`,\n      '@media print': {\n        backgroundColor: '#fff',\n      },\n    },\n  },\n  root: {\n    // backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    display: 'flex',\n    // justifyContent: 'center',\n  },\n  content: {\n    flexGrow: 1,\n    // padding: theme.spacing(3),\n  },\n  drawer: {\n    [theme.breakpoints.up('md')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    '@media print': {\n      display: 'none',\n    },\n  },\n  appBar: {\n    transition: 'background .2s ease-in',\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    '@media print': {\n      width: '100%',\n      marginLeft: 'inherit',\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n}));\n\n// Lazy loading\nconst Home = React.lazy(() => import('./Home/Home'));\nconst RandomRestaurant = React.lazy(() => import('./RandomRestaurant/Random'));\nconst About = React.lazy(() => import('./About/About'));\nconst PeriodicTable = React.lazy(() => import('./PeriodicTable/PeriodicTable'));\n\ninterface AppProps {\n\tisDarkTheme: boolean;\n  setDarkTheme: React.Dispatch<React.SetStateAction<boolean | undefined>>; // StateUpdater<boolean | undefined>;\n}\nexport default function App ({ isDarkTheme, setDarkTheme }: AppProps) {\n  const classes = useStyles();\n  const { translation } = useTranslation();\n  const [isDrawerOpened, setDrawerState] = React.useState(false);\n  const toggleDrawer = (isOpen: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\n    if (event && event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n      return;\n    }\n    setDrawerState(isOpen);\n  };\n  const drawerProps = {\n    toggleDrawer,\n    isDrawerOpened,\n    classes: { paper: classes.drawerPaper },\n    width: drawerWidth,\n  };\n  const navBarProps = {\n    toggleDrawer,\n    isDarkTheme,\n    setDarkTheme,\n    className: classes.appBar,\n  };\n  return (\n      <div className={classes.root}>\n        <nav className={classes.drawer} aria-label=\"app drawer\">\n          <Drawer {...drawerProps} />\n        </nav>\n        <main className={classes.content}> {/* to break the flexbox spell wwwww */}\n        <React.Suspense fallback={<NavBar {...navBarProps} title={translation?.loading} isSuspensed />}>\n          <Switch>\n            <Route exact path=\"/\">\n              <NavBar {...navBarProps} title={translation?.home?.title} />\n              <Home />\n            </Route>\n            <Route path=\"/random\">\n              <NavBar {...navBarProps} title={translation?.random?.title} />\n              <RandomRestaurant />\n            </Route>\n            <Route path=\"/about\">\n              <NavBar {...navBarProps} title={translation?.about?.title} />\n              <About />\n            </Route>\n            <Route path=\"/periodic-table\">\n              <NavBar {...navBarProps} title={translation?.periodicTable?.title} color=\"secondary\" />\n              <PeriodicTable/>\n            </Route>\n            {/* Redirect all 404's to home */}\n            <Redirect to=\"/\" />\n          </Switch>\n        </React.Suspense>\n        </main>\n      </div>\n  );\n}\n","import { teal, lightBlue } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: teal[700],\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: lightBlue[700],\n\t\t},\n\t\tbackground: {\n\t\t\tdefault: '#000',\n\t\t},\n\t\ttype: 'dark',\n\t},\n});\n\nexport default theme;\n","import { teal, lightBlue, blueGrey } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: teal[700],\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: lightBlue[700],\n\t\t},\n\t\tbackground: {\n\t\t\tdefault: blueGrey[50],\n\t\t},\n\t\ttype: 'light',\n\t},\n});\n\nexport default theme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport './index.css';\nimport App from './App';\nimport darkTheme from './darkTheme';\nimport lightTheme from './lightTheme';\nimport * as serviceWorker from './serviceWorker';\n\nimport {\n    // BrowserRouter as Router\n    HashRouter as Router,\n} from 'react-router-dom';\n\nimport { TranslationContextProvider } from './hooks/TranslationContext';\n\nfunction Index () {\n\tconst isDarkThemeDefault = useMediaQuery('(prefers-color-scheme: dark)');\n    const [isDarkTheme, setDarkTheme] = useState(undefined as boolean | undefined);\n    \n    // If using BrowserRouter instead of HashRouter, add this prop: basename={process.env.PUBLIC_URL}\n    return (\n        <Router>\n            <TranslationContextProvider>\n                <ThemeProvider theme={isDarkTheme ?? isDarkThemeDefault ? darkTheme : lightTheme}>\n                    <App isDarkTheme={isDarkTheme ?? isDarkThemeDefault} setDarkTheme={setDarkTheme} />\n                </ThemeProvider>\n            </TranslationContextProvider>\n        </Router>\n    );\n}\n\nReactDOM.render(\n    <Index />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import createTranslation from './createTranslation';\n\nconst { TranslationContext, TranslationContextProvider, useTranslation } = createTranslation({\n    'zh-TW': () => import('./zh-TW'),\n    'yue-HK': () => import('./yue-HK'),\n    'en-US': () => import('./en-US'),\n}, navigator.language);\n\nexport const supportedLanguageList: Record<string, string> = {\n    'zh-TW': '繁體中文',\n    'yue-HK': '廣東話',\n    'en-US': 'English',\n}\n\nexport { TranslationContext, TranslationContextProvider, useTranslation };","/**\n * Ref.: https://blog.usejournal.com/internationalization-with-react-hooks-af37bed9f195\n */\n\nimport React, { createContext, useState, useEffect, useContext } from 'react';\n\nexport interface TranslationsImport<T> {\n    [index: string]: () => Promise<{default: T}>;\n}\n\ninterface State<T> {\n    lang: string;\n    translation: T;\n    setLang: React.Dispatch<React.SetStateAction<string>>;// (lang: string) => void;\n}\n\nexport default function createTranslation<T> (\n    translations: TranslationsImport<T>,\n    defaultLangStr: string\n) {\n    const defaultLang = defaultLangStr in translations ? defaultLangStr : Object.keys(translations)[0];\n    const initialState: State<T> = {\n        lang: defaultLang,\n        translation: {} as T,\n        setLang: () => {},\n    }\n\n    const TranslationContext = createContext(initialState);\n\n    const TranslationContextProvider: React.FC = ({ children }) => {\n        const [lang, setLang] = useState(initialState.lang);\n        const [translation, setTranslation] = useState(initialState.translation)\n\n        useEffect(() => {\n            (async function IIAFE () {\n                if (lang in translations){\n                    const fetchedTranslation = await translations[lang]();\n                    setTranslation(fetchedTranslation.default);\n                    document.documentElement.lang = lang; // change <html lang> attr\n                }\n            })();\n        }, [lang, setTranslation]);\n\n        return <TranslationContext.Provider value={{ lang, translation, setLang }}>\n            {children}\n        </TranslationContext.Provider>;\n    }\n\n    const useTranslation = () => useContext(TranslationContext);\n\n    return { TranslationContext, useTranslation, TranslationContextProvider };\n}","module.exports = __webpack_public_path__ + \"static/media/tubaAvatarSquare.7a16c612.png\";"],"sourceRoot":""}